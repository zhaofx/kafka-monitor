#log4j.rootLogger=error,dailyLog
#log4j.rootLogger=info,console,dailyLog
log4j.rootLogger=info,console

#---------------------------------------------------------------
####\u8f93\u51fa\u65e5\u5fd7\u5230\u63a7\u5236\u53f0
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.Threshold.console=info
log4j.appender.console.Target=System.out
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss} [%c]-[%p] %m%n

#---------------------------------------------------------------
###\u8f93\u51fa\u65e5\u5fd7\u5230dailyFile,\u6bcf\u5929\u751f\u6210\u4e00\u4e2a\u6587\u4ef6
log4j.appender.dailyLog=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.dailyLog.File=${catalina.base}/logs/daily/ts.log
log4j.appender.dailyLog.File=D:/kafka_monitor.log
log4j.appender.dailyLog.layout=org.apache.log4j.PatternLayout
log4j.appender.dailyLog.DatePattern='.'yyyy-MM-dd
log4j.appender.dailyLog.layout.ConversionPattern=[framework] %d{yyyy-MM-dd HH:mm:ss} - %c -%-4r[ms]%n  					[%t] %-5p %x - %m%n

#--------------------------------------------------------------------------------
### any log information  in the "com.letv.bigdata.storm.cdn" package 
### which the level is  above  "info " will be print out !
#log4j.logger.co.gridport.kafka.hadoop=debug
#log4j.logger.com.letv.bigdata.kafka.mr=debug
log4j.logger.co.gridport.kafka.hadoop=info
log4j.logger.com.letv.bigdata.kafka.mr=info
log4j.logger.test=debug